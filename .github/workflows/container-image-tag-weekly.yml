name: InvokeAI Image Build - Last Tagged Version - Weekly
on:
  push:
    branches:
      - main
  schedule:
    # 00:00 on Sunday
    - cron: "0 0 * * 0"
  workflow_dispatch: {}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: thehonker/invokeai

concurrency:
  group: "invokeai"
  cancel-in-progress: false

jobs:
  build-and-push:
    strategy:
      fail-fast: false
      matrix:
        torch-backend:
        - cpu
        - rocm6.3
        - cu126
        - cu128
    runs-on: ubuntu-latest
    name: ${{ matrix.torch-backend }}
    env:
      PLATFORMS: 'linux/amd64'
    timeout-minutes: 120
    permissions:
      contents: read
      packages: write
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Add /mnt as docker-root
        # https://github.com/actions/runner-images/issues/2840#issuecomment-1284059930
        # the /mnt dir has 70GBs of free space
        # /dev/sda1        74G   28K   70G   1% /mnt
        # According to some online posts the /mnt is not always there, so checking before setting docker to use it
        run: |
          if [ mountpoint -q /mnt ]; then
            sudo mkdir -pv /mnt/docker-root
            sudo chmod -R 777 /mnt
            echo '{"data-root": "/mnt/docker-root"}' | sudo tee /etc/docker/daemon.json
            sudo systemctl restart docker
          fi
          df -h

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Clone invokeai repo, apply any patches
        run: |
          git clone --depth=20 --single-branch --branch main https://github.com/invoke-ai/InvokeAI.git src/invokeai
          LAST_TAG="$(cd src/invokeai && git describe --tags --abbrev=0)"
          echo "${LAST_TAG}" >> "$GITHUB_ENV"
          git checkout "${LAST_TAG}"
          for patch in ./patches/${{ matrix.torch-backend }}/*.patch; do
            if test -f "$patch"; then
              echo "Applying patch $patch"
              git -C src/invokeai apply "$patch"
            fi
          done

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=raw,value=${{ env.LAST_TAG }},priority=100,prefix=${{ matrix.torch-backend }}-
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and Push Image
        uses: docker/bake-action@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          source: ./src/
          push: true
          files: |
            ./docker-bake.hcl
            cwd://${{ steps.meta.outputs.bake-file }}
          targets: build
          set: |
            target.args.GPU_DRIVER="${{ matrix.torch-backend }}"
