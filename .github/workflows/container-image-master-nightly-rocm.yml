name: InvokeAI image - master branch - nightly - rocm
on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch: {}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: thehonker/invokeai
  GPU: "rocm"

concurrency:
  group: "invokeai-rocm"
  cancel-in-progress: false

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
      packages: write
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Add /mnt as docker-root
        # https://github.com/actions/runner-images/issues/2840#issuecomment-1284059930
        # the /mnt dir has 70GBs of free space
        # /dev/sda1        74G   28K   70G   1% /mnt
        # According to some online posts the /mnt is not always there, so checking before setting docker to use it
        run: |
          if [ mountpoint -q /mnt ]; then
            sudo mkdir -pv /mnt/docker-root
            sudo chmod -R 777 /mnt
            echo '{"data-root": "/mnt/docker-root"}' | sudo tee /etc/docker/daemon.json
            sudo systemctl restart docker
          fi
          df -h

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Clone invokeai repo, apply any patches
        run: |
          git clone --depth=1 --single-branch --branch main https://github.com/invoke-ai/InvokeAI.git src/invokeai

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=raw,value=latest,priority=1000,prefix=rocm-
            type=schedule,enable=true,priority=900,pattern={{date 'YYYYMMDD'}},prefix=rocm-
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: src/
          file: src/Containerfile.rocm
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
