# syntax=docker/dockerfile:1

FROM docker.io/node:22-slim AS web-builder
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack use pnpm@10.x && corepack enable

WORKDIR /build
COPY --chown=node:node ./invokeai/invokeai/frontend/web/ ./
RUN pnpm install --frozen-lockfile
RUN npx vite build

FROM docker.io/ubuntu:24.04

SHELL ["/bin/bash", "-c"]

ARG GPU_DRIVER

ENV GPU_DRIVER=$GPU_DRIVER

USER root

# Register the ROCM package repository, and install rocm-dev package
ARG ROCM_VERSION=7.0.2
ARG AMDGPU_VERSION=7.0.2

RUN echo "Package: *\nPin: release o=repo.radeon.com\nPin-Priority: 600" | tee /etc/apt/preferences.d/rocm-pin-600

RUN set -exu \
  && export DEBIAN_FRONTEND=noninteractive \
  && apt-get update -yq \
  && apt-get install -yq \
    --no-install-recommends \
      ca-certificates \
      curl \
      libnuma-dev \
      gnupg \
  && curl -sL https://repo.radeon.com/rocm/rocm.gpg.key | apt-key add - \
  && printf "deb [arch=amd64] https://repo.radeon.com/rocm/apt/$ROCM_VERSION/ noble main" | tee --append /etc/apt/sources.list.d/rocm.list \
  && printf "deb [arch=amd64] https://repo.radeon.com/amdgpu/$AMDGPU_VERSION/ubuntu noble main" | tee /etc/apt/sources.list.d/amdgpu.list \
  && apt-get update -yq \
  && apt-get install -yq \
    --no-install-recommends \
      sudo \
      libelf1 \
      kmod \
      file \
      python3-dev \
      python3-pip \
      rocm-dev \
      rocm-libs \
      build-essential \
  && apt-get -yq clean \
  && rm -rf /var/lib/apt/lists/*

RUN groupadd -g 109 render

RUN set -exu \
  && export DEBIAN_FRONTEND=noninteractive \
  && apt-get -yq update \
  && apt-get -yq install \
    bash \
    curl \
    nano \
    wget \
    git \
    python3 \
    python3-venv \
    python3-pip \
    python3-setuptools \
    python3-wheel \
    python3-opencv \
    libopencv-dev \
    pipx \
    libgl1 \
    libglib2.0-0 \
    libtcmalloc-minimal4 \
    bc \
    pciutils \
    make \
    build-essential \
  && apt-get -yq clean \
  && rm -rf /var/lib/apt/lists/*

RUN set -exu \
  && addgroup \
    --gid 1101 \
    invokeai \
  && adduser \
    --uid 1101 \
    --ingroup invokeai \
    --disabled-password \
    --gecos invokeai \
    invokeai \
  && usermod -a -G render invokeai

# invokeai repo assumed to have been cloned for us
COPY ./entrypoint.sh /entrypoint.sh
COPY --chown=invokeai:invokeai ./invokeai /home/invokeai/invokeai-source
RUN set -exu && mkdir -pv /home/invokeai/invokeai-source/frontend/web/
COPY --from=web-builder --chown=invokeai:invokeai /build/dist /home/invokeai/invokeai-source/invokeai/frontend/web/dist
COPY --chown=invokeai:invokeai ./install-invokeai.sh /install-invokeai.sh

USER invokeai
WORKDIR /home/invokeai

RUN set -exu \
  && /bin/bash /install-invokeai.sh $GPU_DRIVER

USER root

RUN set -exu \
  && rm -rf /home/invokeai/invokeai-source

USER invokeai

ENTRYPOINT ["/bin/bash"]
CMD ["/entrypoint.sh"]
